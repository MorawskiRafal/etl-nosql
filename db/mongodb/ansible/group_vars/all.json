{
    "make_dirs": [
    ],
    "copy_files": [
    ],
    "cluster": {
      "node_manager": "192.168.55.16",
      "node_workers": [
        "192.168.55.16"
      ]
    },
    "database_info_path": "db/cassandra",
    "udf_path": "db/cassandra/udf",
    "database_info_file": "cassandra.info.json",
    "docker_compose_path": "~/etl-nosql/db/cassandra",
    "docker_compose_file_gen": "~/etl-nosql/db/cassandra/",
    "docker_compose_file": "~/etl-nosql/db/cassandra/docker-compose.yaml",
    "ansible_catalog": "ansible",
    "generate_scripts_only": false,
    "tables_schema": [
        "date_dim",
        "store_sales",
        "catalog_sales",
        "web_sales",
        "warehouse",
        "customer"
    ],
    "udfs": [
        "10_intersect_np.json",
        "10_intersect_pp.json",
        "18_merge_join_np.json",
        "18_merge_join_pp.json",
        "34_sort_fp.json"
    ],
    "db": {
        "service_name": "cassandra",
        "etl_driver": "cassandra",
        "docker_stack_name": "ETL",
        "db_tables_path": "/table_data",
        "db_tables_schema": "/tables_schema",
        "network_name": "cassandraNet"
    },
    "configs": [
        {
            "file_name": "jvm.options",
            "file_path": "~/etl-nosql/db/cassandra/etc/cassandra",
            "params": [
                {
                    "regex": "#-Xms4G",
                    "replace": "-Xms{{java_xms}}M"
                },
                {
                    "regex": "#-Xmx4G",
                    "replace": "-Xmx{{java_xms}}M"
                }
            ]
        },
        {
            "file_name": "keyspace",
            "file_path": "~/etl-nosql/db/cassandra/tables_schema",
            "params": [
                {
                    "regex": "__keyspace__",
                    "replace": "{{namespace}}"
                },
                {
                    "regex": "__rep_factor__",
                    "replace": "{{rep_factor}}"
                }
            ]
        },
        {
            "file_name": "keyspace_update",
            "file_path": "~/etl-nosql/db/cassandra/tables_schema",
            "params": [
                {
                    "regex": "__keyspace__",
                    "replace": "{{namespace}}"
                },
                {
                    "regex": "__rep_factor__",
                    "replace": "{{rep_factor}}"
                }
            ]
        }
    ],
    "namespace": "tpc_ds",
    "exec_file": "cqlsh -f  ",
    "exec_string": "cqlsh -e ",
    "exec": [
        "nodetool flush"
    ],
    "table_infos": {
        "date_dim": {
            "table": "date_dim",
            "load": "COPY {namespace}.{table}(d_date_sk, d_date_id, d_date, d_month_seq, d_week_seq, d_quarter_seq, d_year, d_dow, d_moy, d_dom, d_qoy, d_fy_year, d_fy_quarter_seq, d_fy_week_seq, d_day_name, d_quarter_name, d_holiday, d_weekend, d_following_holiday, d_first_dom, d_last_dom, d_same_day_ly, d_same_day_lq, d_current_day, d_current_week, d_current_month, d_current_quarter, d_current_year) FROM '{path}/{file}.dat' WITH DELIMITER='|';",
            "drop": "DROP TABLE {namespace}.{table}"
        },
        "catalog_sales": {
            "table": "catalog_sales",
            "load": "COPY {namespace}.catalog_sales(cs_sold_date_sk, cs_sold_time_sk, cs_ship_date_sk, cs_bill_customer_sk, cs_bill_cdemo_sk, cs_bill_hdemo_sk, cs_bill_addr_sk, cs_ship_customer_sk, cs_ship_cdemo_sk, cs_ship_hdemo_sk, cs_ship_addr_sk, cs_call_center_sk, cs_catalog_page_sk, cs_ship_mode_sk, cs_warehouse_sk, cs_item_sk, cs_promo_sk, cs_order_number, cs_quantity , cs_wholesale_cost, cs_list_price, cs_sales_price, cs_ext_discount_amt, cs_ext_sales_price, cs_ext_wholesale_cost, cs_ext_list_price, cs_ext_tax, cs_coupon_amt, cs_ext_ship_cost, cs_net_paid, cs_net_paid_inc_tax, cs_net_paid_inc_ship, cs_net_paid_inc_ship_tax, cs_net_profit ) FROM '{path}/{file}.dat' WITH DELIMITER='|';",
            "drop": "DROP TABLE {namespace}.{table}"
        },
        "store_sales": {
            "table": "store_sales",
            "load": "COPY {namespace}.{table}(ss_sold_date_sk, ss_sold_time_sk, ss_item_sk, ss_customer_sk, ss_cdemo_sk, ss_hdemo_sk, ss_addr_sk, ss_store_sk, ss_promo_sk, ss_ticket_number, ss_quantity , ss_wholesale_cost, ss_list_price, ss_sales_price, ss_ext_discount_amt, ss_ext_sales_price, ss_ext_wholesale_cost, ss_ext_list_price, ss_ext_tax, ss_coupon_amt, ss_net_paid, ss_net_paid_inc_tax, ss_net_profit) FROM '{path}/{file}.dat' WITH DELIMITER='|';",
            "drop": "DROP TABLE {namespace}.{table}"
        },
        "catalog_returns": {
            "table": "catalog_returns",
            "load": "COPY {namespace}.{table}(cr_returned_date_sk, cr_returned_time_sk, cr_item_sk, cr_refunded_customer_sk, cr_refunded_cdemo_sk, cr_refunded_hdemo_sk, cr_refunded_addr_sk, cr_returning_customer_sk, cr_returning_cdemo_sk, cr_returning_hdemo_sk, cr_returning_addr_sk, cr_call_center_sk, cr_catalog_page_sk, cr_ship_mode_sk, cr_warehouse_sk, cr_reason_sk, cr_order_number, cr_return_quantity, cr_return_amount, cr_return_tax, cr_return_amt_inc_tax, cr_fee, cr_return_ship_cost, cr_refunded_cash, cr_reversed_charge, cr_store_credit, cr_net_loss ) FROM '{path}/{file}.dat' WITH DELIMITER='|';",
            "drop": "DROP TABLE {namespace}.{table}"
        },
        "warehouse": {
            "table": "warehouse",
            "load": "COPY {namespace}.{table}(w_warehouse_sk, w_warehouse_id, w_warehouse_name, w_warehouse_sq_ft, w_street_number, w_street_name, w_street_type, w_suite_number, w_city, w_county,w_state, w_zip, w_country, w_gmt_offset) FROM '{path}/{file}.dat' WITH DELIMITER='|';",
            "drop": "DROP TABLE {namespace}.{table}"
        },
        "web_sales": {
            "table": "web_sales",
            "load": "COPY {namespace}.{table}(ws_sold_date_sk, ws_sold_time_sk, ws_ship_date_sk, ws_item_sk, ws_bill_customer_sk, ws_bill_cdemo_sk, ws_bill_hdemo_sk, ws_bill_addr_sk, ws_ship_customer_sk, ws_ship_cdemo_sk, ws_ship_hdemo_sk, ws_ship_addr_sk, ws_web_page_sk, ws_web_site_sk, ws_ship_mode_sk, ws_warehouse_sk, ws_promo_sk, ws_order_number, ws_quantity, ws_wholesale_cost, ws_list_price, ws_sales_price, ws_ext_discount_amt, ws_ext_sales_price, ws_ext_wholesale_cost, ws_ext_list_price, ws_ext_tax, ws_coupon_amt, ws_ext_ship_cost, ws_net_paid, ws_net_paid_inc_tax, ws_net_paid_inc_ship, ws_net_paid_inc_ship_tax, ws_net_profit ) FROM '{path}/{file}.dat' WITH DELIMITER='|';",
            "drop": "DROP TABLE {namespace}.{table}"
        },
        "customer": {
            "table": "customer",
            "load": "COPY {namespace}.{table}(c_customer_sk, c_customer_id, c_current_cdemo_sk, c_current_hdemo_sk, c_current_addr_sk, c_first_shipto_date_sk, c_first_sales_date_sk, c_salutation, c_first_name, c_last_name, c_preferred_cust_flag, c_birth_day, c_birth_month, c_birth_year, c_birth_country, c_login, c_email_address, c_last_review_date_sk) FROM '{path}/{file}.dat' WITH DELIMITER='|';",
            "drop": "DROP TABLE {namespace}.{table}"
        }
    },
    "rep_factor": 3,
    "java_xms": 4000,
    "cluster_size": 1,
    "scale": 2
}